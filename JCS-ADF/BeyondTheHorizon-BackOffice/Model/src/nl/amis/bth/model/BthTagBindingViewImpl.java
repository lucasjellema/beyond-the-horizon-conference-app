package nl.amis.bth.model;

import java.sql.CallableStatement;
import java.sql.ResultSet;

import java.sql.SQLException;

import nl.amis.bth.model.common.BthTagBindingView;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.server.DBTransactionImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Apr 24 11:41:19 CEST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BthTagBindingViewImpl extends ViewObjectImpl implements BthTagBindingView {
    /**
     * This is the default constructor (do not remove).
     */
    public BthTagBindingViewImpl() {
    }

    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    @Override
    protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    @Override
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    @Override
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }

    /**
     * getCappedQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getCappedQueryHitCount(ViewRowSetImpl viewRowSet, Row[] masterRows, long oldCap, long cap) {
        long value = super.getCappedQueryHitCount(viewRowSet, masterRows, oldCap, cap);
        return value;
    }


    /* http://adfpractice-fedor.blogspot.nl/2013/01/working-with-plsql-procedures-in-adf-bc.html */
        
        // bth_tags_api.add_tag_to_session
    // ( p_tag in varchar2 
    //, p_ssn_id in number
    // );
        public void execTagsToSession(String tags,
                                         Integer ssnId) {
            DBTransactionImpl dbti = (DBTransactionImpl)getDBTransaction();
            CallableStatement statement =
              dbti.createCallableStatement(("BEGIN "+"bth_tags_api.add_tag_to_session(?,?);" +
                                            "END;"), 0);
        String[] tagArray = tags.split(",");
        try {
           for (int i=0; i<tagArray.length;i++) {
                statement.setString(1, tagArray[i]);
                statement.setInt(2, ssnId);
                statement.execute();
                }    
                return;
            } catch (SQLException sqlerr) {
                throw new JboException(sqlerr);
            } finally {
                try {
                    if (statement != null) {
                        statement.close();
                    }
                } catch (SQLException closeerr) {
                    throw new JboException(closeerr);
                }
            }
        }//execTagsToSession
    

}

